<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ning.dao.RecordMapper">

    <insert id="addRecord" parameterType="Record">
        insert into RECORD (READERID, BOOKID, BORROWDATE, STATE, EXPECTDATE, RETURNDATE)
        VALUES (#{readerId},#{bookId},#{borrowDate},#{state},#{expectDate},#{returnDate})
    </insert>

    <update id="updateRecord" parameterType="Record">
        update RECORD set STATE = #{state},
                        EXPECTDATE = #{expectDate}
                        /*续借操作returnDate == null 时需要动态SQL判空*/
                        <if test="returnDate!=null">
                            RETURNDATE = #{returnDate}
                        </if>
                    where READERID = #{readerId} and BOOKID = #{bookId} and BORROWDATE = #{borrowDate}
    </update>

    <select id="queryRecordByReaderId" resultType="Record">
        select * from RECORD join BOOKS using (BOOKID) where READERID = #{readerId}
    </select>

    <select id="queryContinueByReaderId" resultType="Record">
        select * from RECORD join BOOKS using (BOOKID) where READERID = #{readerId} and RECORD.STATE = '未还'
    </select>

    <select id="queryUnReturnByReaderId" resultType="Record">
        select * from RECORD join BOOKS using (BOOKID) where READERID = #{readerId} and (RECORD.STATE = '未还' or RECORD.STATE = '续借' or RECORD.STATE = '逾期')
    </select>

    <select id="queryUnReturn" resultType="Record">
        select * from RECORD join BOOKS using (BOOKID) where (RECORD.STATE = '未还' or RECORD.STATE = '续借' or RECORD.STATE = '逾期')
    </select>

    <select id="queryAllRecord" resultType="Record">
        select * from RECORD
    </select>

</mapper>